// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Size.Data;

namespace Size.Data.Migrations
{
    [DbContext(typeof(SizeDbContext))]
    [Migration("20210320023519_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Size.Data.DTO.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContaID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DocumentoID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoCliente")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContaID");

                    b.HasIndex("DocumentoID");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("Size.Data.DTO.Conta", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.ToTable("Conta");
                });

            modelBuilder.Entity("Size.Data.DTO.Documento", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoDocumento")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Documento");
                });

            modelBuilder.Entity("Size.Data.DTO.HistoricoTransacao", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContaID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("TipoOperacao")
                        .HasColumnType("int");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.HasIndex("ContaID");

                    b.ToTable("HistoricosTransacoes");
                });

            modelBuilder.Entity("Size.Data.DTO.Cliente", b =>
                {
                    b.HasOne("Size.Data.DTO.Conta", "Conta")
                        .WithMany()
                        .HasForeignKey("ContaID");

                    b.HasOne("Size.Data.DTO.Documento", "Documento")
                        .WithMany()
                        .HasForeignKey("DocumentoID");

                    b.Navigation("Conta");

                    b.Navigation("Documento");
                });

            modelBuilder.Entity("Size.Data.DTO.HistoricoTransacao", b =>
                {
                    b.HasOne("Size.Data.DTO.Conta", null)
                        .WithMany("HistoricosTransacoes")
                        .HasForeignKey("ContaID");
                });

            modelBuilder.Entity("Size.Data.DTO.Conta", b =>
                {
                    b.Navigation("HistoricosTransacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
